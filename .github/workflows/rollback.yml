name: Emergency Rollback

on:
  workflow_dispatch:
    inputs:
      service:
        description: 'Service to rollback'
        required: true
        type: choice
        options:
          - backend
          - frontend
          - both
      rollback_to:
        description: 'Rollback to specific commit SHA (optional)'
        required: false
        type: string
      reason:
        description: 'Reason for rollback'
        required: true
        type: string

env:
  NODE_VERSION: '20'

jobs:
  validate-rollback:
    name: Validate Rollback Request
    runs-on: ubuntu-latest
    outputs:
      rollback-sha: ${{ steps.validate.outputs.rollback-sha }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 50

      - name: Validate rollback target
        id: validate
        run: |
          if [ -n "${{ github.event.inputs.rollback_to }}" ]; then
            ROLLBACK_SHA="${{ github.event.inputs.rollback_to }}"
            if ! git cat-file -e ${ROLLBACK_SHA}^{commit} 2>/dev/null; then
              echo "‚ùå Invalid commit SHA: ${ROLLBACK_SHA}"
              exit 1
            fi
          else
            # Get the previous successful deployment
            ROLLBACK_SHA=$(git log --format="%H" -n 2 origin/main | tail -1)
          fi

          echo "‚úÖ Rollback target: ${ROLLBACK_SHA}"
          echo "rollback-sha=${ROLLBACK_SHA}" >> $GITHUB_OUTPUT

      - name: Get commit details
        run: |
          echo "### Rollback Details" >> $GITHUB_STEP_SUMMARY
          echo "- **Service**: ${{ github.event.inputs.service }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Reason**: ${{ github.event.inputs.reason }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Target SHA**: ${{ steps.validate.outputs.rollback-sha }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Target Commit**: $(git log --oneline -1 ${{ steps.validate.outputs.rollback-sha }})" >> $GITHUB_STEP_SUMMARY

  rollback-backend:
    name: Rollback Backend
    runs-on: ubuntu-latest
    needs: validate-rollback
    if: github.event.inputs.service == 'backend' || github.event.inputs.service == 'both'
    environment:
      name: production-rollback

    steps:
      - name: Checkout rollback target
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.validate-rollback.outputs.rollback-sha }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Build backend at rollback point
        run: |
          cd backend
          npm ci --only=production
          npm run build

      - name: Deploy rollback version
        uses: render-deploy-action@v1.4.0
        with:
          service-id: ${{ secrets.RENDER_BACKEND_SERVICE_ID }}
          api-key: ${{ secrets.RENDER_API_KEY }}
          wait-for-success: true

      - name: Verify rollback health
        run: |
          sleep 30
          for i in {1..10}; do
            if curl -f https://auzap-backend-api.onrender.com/health; then
              echo "‚úÖ Backend rollback successful"
              break
            else
              echo "‚è≥ Waiting for backend to be healthy... (attempt $i/10)"
              sleep 30
            fi
            if [ $i -eq 10 ]; then
              echo "‚ùå Backend rollback failed - service not healthy"
              exit 1
            fi
          done

      - name: Notify team of backend rollback
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          custom_payload: |
            {
              text: "üîÑ Backend Rollback Completed",
              attachments: [{
                color: "warning",
                fields: [
                  { title: "Service", value: "Backend", short: true },
                  { title: "Reason", value: "${{ github.event.inputs.reason }}", short: true },
                  { title: "Rollback SHA", value: "${{ needs.validate-rollback.outputs.rollback-sha }}", short: true },
                  { title: "Triggered by", value: "${{ github.actor }}", short: true }
                ]
              }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  rollback-frontend:
    name: Rollback Frontend
    runs-on: ubuntu-latest
    needs: validate-rollback
    if: github.event.inputs.service == 'frontend' || github.event.inputs.service == 'both'
    environment:
      name: production-rollback

    steps:
      - name: Checkout rollback target
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.validate-rollback.outputs.rollback-sha }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Build frontend at rollback point
        run: |
          cd frontend
          npm ci
          VITE_API_URL=https://auzap-backend-api.onrender.com/api npm run build

      - name: Deploy rollback version
        uses: render-deploy-action@v1.4.0
        with:
          service-id: ${{ secrets.RENDER_FRONTEND_SERVICE_ID }}
          api-key: ${{ secrets.RENDER_API_KEY }}
          wait-for-success: true

      - name: Verify rollback health
        run: |
          sleep 30
          for i in {1..10}; do
            if curl -f https://auzap-frontend.onrender.com; then
              echo "‚úÖ Frontend rollback successful"
              break
            else
              echo "‚è≥ Waiting for frontend to be accessible... (attempt $i/10)"
              sleep 30
            fi
            if [ $i -eq 10 ]; then
              echo "‚ùå Frontend rollback failed - service not accessible"
              exit 1
            fi
          done

      - name: Notify team of frontend rollback
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          custom_payload: |
            {
              text: "üîÑ Frontend Rollback Completed",
              attachments: [{
                color: "warning",
                fields: [
                  { title: "Service", value: "Frontend", short: true },
                  { title: "Reason", value: "${{ github.event.inputs.reason }}", short: true },
                  { title: "Rollback SHA", value: "${{ needs.validate-rollback.outputs.rollback-sha }}", short: true },
                  { title: "Triggered by", value: "${{ github.actor }}", short: true }
                ]
              }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  post-rollback-verification:
    name: Post-Rollback Verification
    runs-on: ubuntu-latest
    needs: [rollback-backend, rollback-frontend]
    if: always() && (needs.rollback-backend.result == 'success' || needs.rollback-frontend.result == 'success')

    steps:
      - name: Comprehensive health check
        run: |
          echo "üîç Running comprehensive post-rollback health checks..."

          # Backend health check
          if curl -f https://auzap-backend-api.onrender.com/health; then
            echo "‚úÖ Backend is healthy"
          else
            echo "‚ùå Backend health check failed"
            HEALTH_FAILED=true
          fi

          # Frontend accessibility check
          if curl -f https://auzap-frontend.onrender.com; then
            echo "‚úÖ Frontend is accessible"
          else
            echo "‚ùå Frontend accessibility check failed"
            HEALTH_FAILED=true
          fi

          if [ "$HEALTH_FAILED" = true ]; then
            echo "‚ùå Post-rollback health checks failed"
            exit 1
          fi

          echo "‚úÖ All post-rollback health checks passed"

      - name: Create rollback incident report
        uses: actions/github-script@v7
        with:
          script: |
            const rollbackReport = `
            # Rollback Incident Report

            **Date**: ${new Date().toISOString()}
            **Service**: ${{ github.event.inputs.service }}
            **Reason**: ${{ github.event.inputs.reason }}
            **Rollback SHA**: ${{ needs.validate-rollback.outputs.rollback-sha }}
            **Triggered by**: ${{ github.actor }}

            ## Services Affected
            ${github.event.inputs.service === 'both' ? '- Backend\n- Frontend' : `- ${github.event.inputs.service.charAt(0).toUpperCase() + github.event.inputs.service.slice(1)}`}

            ## Status
            - Rollback completed successfully
            - Health checks passed
            - Services are operational

            ## Next Steps
            1. Monitor system stability
            2. Investigate root cause of the issue
            3. Plan and test fix for the original problem
            4. Schedule re-deployment when fix is ready
            `;

            // Create an issue for tracking
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `üîÑ Rollback Incident Report - ${new Date().toLocaleDateString()}`,
              body: rollbackReport,
              labels: ['incident', 'rollback', 'production']
            });

      - name: Final notification
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          custom_payload: |
            {
              text: "‚úÖ Rollback Operation Completed Successfully",
              attachments: [{
                color: "good",
                fields: [
                  { title: "Service", value: "${{ github.event.inputs.service }}", short: true },
                  { title: "Status", value: "Healthy", short: true },
                  { title: "Triggered by", value: "${{ github.actor }}", short: true },
                  { title: "Duration", value: "~5 minutes", short: true }
                ],
                footer: "All systems are operational. Incident report created in GitHub."
              }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}